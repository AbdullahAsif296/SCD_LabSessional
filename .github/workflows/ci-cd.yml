name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          [
            { name: "api-gateway", path: "Cafe_Management_System/api-gateway" },
            {
              name: "customer-services",
              path: "Cafe_Management_System/customer-services",
            },
            {
              name: "inventory-services",
              path: "Cafe_Management_System/inventory-services",
            },
            {
              name: "menu-services",
              path: "Cafe_Management_System/menu-services",
            },
            {
              name: "order-services",
              path: "Cafe_Management_System/order-services",
            },
            {
              name: "payment-services",
              path: "Cafe_Management_System/payment-services",
            },
          ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: ${{ matrix.service.path }}/package-lock.json

      - name: Install dependencies
        run: |
          cd ${{ matrix.service.path }}
          npm ci

      - name: Run tests
        run: |
          cd ${{ matrix.service.path }}
          npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        service:
          [
            { name: "api-gateway", path: "Cafe_Management_System/api-gateway" },
            {
              name: "customer-services",
              path: "Cafe_Management_System/customer-services",
            },
            {
              name: "inventory-services",
              path: "Cafe_Management_System/inventory-services",
            },
            {
              name: "menu-services",
              path: "Cafe_Management_System/menu-services",
            },
            {
              name: "order-services",
              path: "Cafe_Management_System/order-services",
            },
            {
              name: "payment-services",
              path: "Cafe_Management_System/payment-services",
            },
          ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ 'abdullahasif2966' }}
          password: ${{ 'dckr_pat_RcWxw1SLY3PWhJzv1K4jXIGBEqE' }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ 'abdullahasif2966' }}/cafe-${{ matrix.service.name }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.service.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ 'abdullahasif2966' }}/cafe-${{ matrix.service.name }}:buildcache
          cache-to: type=registry,ref=${{ 'abdullahasif2966' }}/cafe-${{ matrix.service.name }}:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update docker-compose with latest images
        run: |
          sed -i 's|build: ./api-gateway|image: ${{ 'abdullahasif2966' }}/cafe-api-gateway:latest|g' Cafe_Management_System/docker-compose.yml
          sed -i 's|build: ./customer-services|image: ${{ 'abdullahasif2966' }}/cafe-customer-services:latest|g' Cafe_Management_System/docker-compose.yml
          sed -i 's|build: ./inventory-services|image: ${{ 'abdullahasif2966' }}/cafe-inventory-services:latest|g' Cafe_Management_System/docker-compose.yml
          sed -i 's|build: ./menu-services|image: ${{ 'abdullahasif2966' }}/cafe-menu-services:latest|g' Cafe_Management_System/docker-compose.yml
          sed -i 's|build: ./order-services|image: ${{ 'abdullahasif2966' }}/cafe-order-services:latest|g' Cafe_Management_System/docker-compose.yml
          sed -i 's|build: ./payment-services|image: ${{ 'abdullahasif2966' }}/cafe-payment-services:latest|g' Cafe_Management_System/docker-compose.yml

      # Placeholder for deployment to server
      # In a real scenario, you would use SSH or deploy to a cloud service
      - name: Deployment placeholder
        run: echo "Deployment would happen here. For actual deployment, implement SSH to server or deploy to cloud service."
